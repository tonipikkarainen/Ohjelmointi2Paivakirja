package paivakirja;

import java.io.OutputStream;
import java.io.PrintStream;

/**
 * Luokka yhden transkription luomista varten.
 * @author tonipikkarainen
 * @version 29.2.2016
 *
 */
public class Transkriptio {
    private int idNumero;
    private String kappale;
    private String artisti;
    
    private static int seuraavaId=1;

    /**
     * Annetaan testitiedot mitä vastataan
     */
    public void vastaaBad(){
        kappale = "Bad Mama "+String.format("%04d",kanta.Arpominen.rand(0, 1000));
        artisti = "Teemu Viinikainen";
    }
    
    /**
     * Tulostus
     * @param os mihin tulostetaan
     */
    public void tulosta(OutputStream os){
        tulosta(new PrintStream(os));
    }
    
    /**
     * Tulostetaan transkription tiedot
     * @param out mihin tulostetaan
     */
    public void tulosta(PrintStream out){
        out.println(String.format("%03d", idNumero));
        out.println(" "+kappale);
        out.println(" "+artisti);       
    }
    
    
    /**
     * Selvitetään id
     * @return id kokonaislukuna
     */
    public int getIdNumero(){
        return idNumero;
    }
    
    
    /**
     * Rekistöidään transkriptio, kasvatetaan id:tä
     * @return idNumero (kokonaisluku)
     * @example
     * <pre name="test">
     * Transkriptio badmama1 = new Transkriptio();
     * badmama1.getIdNumero() === 0;
     * badmama1.rekisteroi();
     * Transkriptio badmama2 = new Transkriptio();
     * badmama2 .rekisteroi();
     * int a = badmama1.getIdNumero();
     * int b = badmama2 .getIdNumero();
     * b - a === 1;
     * </pre>
     */
    public int rekisteroi() {
        if(idNumero > 0) return idNumero;
        idNumero = seuraavaId;
        seuraavaId++;
        return idNumero;
    }
    

    /**
     * Kokeilu pääohjelma
     * @param args ei käytössä
     */
    public static void main(String[] args) {
        Transkriptio badmama1 = new Transkriptio();
        Transkriptio badmama2 = new Transkriptio();
        
        badmama1.vastaaBad();
        badmama2.vastaaBad();
        
        badmama1.rekisteroi();
        badmama2.rekisteroi();
        
        badmama1.tulosta(System.out);
        badmama2.tulosta(System.out);
        
        
        

    }

}
