package paivakirja;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.Scanner;

/**
 * Luokka pit‰‰ huolen yhdest‰ kokonaisuudesta harjoituksia
 * @author tonipikkarainen
 * @version 23.2.2016
 *
 */
public class Harjoitukset {

    private static final int MAX_HARJOITUSLKM = 8;
    private Harjoitus[] alkiot = new Harjoitus[MAX_HARJOITUSLKM];
    private int lukumaara;
    private String tiedostonPerusNimi = "harjoitus";

    
    /**
     * Lis‰t‰‰n uusi harjoitus
     * @param harj harjoitus joka lis‰t‰‰n
     * @throws SailoException jos tuodaan liikaa alkioita
     * @example
     * <pre name="test">
     * #THROWS SailoException
     * Harjoitukset harjoitukset = new Harjoitukset();
     * Harjoitus harj1 = new Harjoitus();
     * Harjoitus harj2 = new Harjoitus();
     * harjoitukset.lisaa(harj1); 
     * int a = harjoitukset.getLukumaara();
     * harjoitukset.lisaa(harj2);
     * int b =  harjoitukset.getLukumaara();
     * b - a  ===  1;
     * harjoitukset.anna(0) === harj1;
     * harjoitukset.anna(1) === harj2;
     * harjoitukset.anna(4) === harj1; #THROWS IndexOutOfBoundsException
     * harjoitukset.lisaa(harj2);
     * harjoitukset.lisaa(harj2);
     * harjoitukset.lisaa(harj2);
     * harjoitukset.lisaa(harj2);
     * harjoitukset.lisaa(harj2);
     * harjoitukset.lisaa(harj2);
     * harjoitukset.lisaa(harj2);  #THROWS SailoException
     * </pre>
     */
    public void lisaa(Harjoitus harj) throws SailoException{
        if (lukumaara >= alkiot.length) throw new SailoException("Liikaa alkioita");
        alkiot[lukumaara]=harj;
        lukumaara++;
    }

    
    /**
     * Haetaan tietty harjoitus alkioista
     * @param i mist‰ paikasta harjoitus haetaan
     * @return harjoituksen tietyst‰ paikasta
     * @throws IndexOutOfBoundsException jos annetaan v‰‰r‰nlainen indeksi
     */
    public Harjoitus anna(int i) throws IndexOutOfBoundsException {
        if (i<0 || lukumaara <= i)
            throw new IndexOutOfBoundsException("V‰‰r‰n suuruinen indeksi: " + i);
        return alkiot[i];
    }


  
    /** 
     * Kysyt‰‰n harjoitusten m‰‰r‰
     * @return lukum‰‰r‰
     */
    public int getLukumaara(){
        return lukumaara;
    }
    

    /**
     * Tallennetaan harjoitukset
     *  @throws SailoException jos talletus ep‰onnistuu
     */
    public void tallenna()  throws SailoException{
        File tiedNimi = new File(getTiedostonNimi());
        try( PrintWriter fo = new PrintWriter(new FileWriter(tiedNimi.getCanonicalPath()))) {     
            for(int i = 0; i < lukumaara; i++){
            Harjoitus harjoitus = alkiot[i];
            fo.println(harjoitus);     
            }
        }
        catch ( FileNotFoundException ex){
            System.err.println("Tiedosto ei aukea: " + ex.getMessage());
        } catch (IOException e) {
            
            System.err.println(e.getMessage());
        }
        
    }
    
    
    public void haeHarjoitukset() throws SailoException{
        haeHarjoitukset(getTiedostonPerusnimi());
    }

    
    private String getTiedostonPerusnimi() {
        return tiedostonPerusNimi;
    }


    /**
     * Lukee harjoitukset tiedostosta
     * @param nimi vdv
     * @throws SailoException jos liikaa j‰seni‰
     */
    public void haeHarjoitukset(String nimi) throws SailoException {
        setTiedostonPerusNimi(nimi);
        
        try(Scanner fi = new Scanner(new FileInputStream(new File(getTiedostonNimi())))){
            while(fi.hasNext()){
                String rivi = fi.nextLine();
                rivi = rivi.trim();
                Harjoitus harj = new Harjoitus();
                harj.asetaKentat(rivi);
                lisaa(harj); 
            }
        }catch (FileNotFoundException e){
            System.err.println(e.getMessage());
            return;
        }
        
    }
    
    

    private String getTiedostonNimi() {
        return getTiedostonPerusnimi()+".dat";
    }


    public void setTiedostonPerusNimi(String nimi) {
        tiedostonPerusNimi = nimi;   
    }

    
    
    /**
     * kokeilup‰‰ohjelma
     * @param args ei k‰ytˆss‰
     */
    public static void main(String[] args) {
        Harjoitukset harjoitukset = new Harjoitukset();

        try{
            Harjoitus harj1 = new Harjoitus();
            Harjoitus harj2 = new Harjoitus();

            harj1.rekisteroi();
            harj2.rekisteroi();

            harj1.vastaaEkaHarj();
            harj2.vastaaEkaHarj();

            harjoitukset.lisaa(harj1);
            harjoitukset.lisaa(harj2);
            


            System.out.println("===== Harjoitukset-testi =====");
            for(int i = 0; i < harjoitukset.getLukumaara(); i++){
                Harjoitus harjoitus = harjoitukset.anna(i);
                System.out.println("Harjoitus numero: "+i);
                harjoitus.tulosta(System.out);
            }

        }catch(SailoException e){
            System.err.println(e.getMessage());
        }

    }







}
