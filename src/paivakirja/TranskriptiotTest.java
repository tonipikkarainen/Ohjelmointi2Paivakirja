package paivakirja;
// Generated by ComTest BEGIN
import paivakirja.*;
import java.util.*;
import java.io.File;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2016.04.14 13:34:39 // Generated by ComTest
 *
 */
@SuppressWarnings("unused")
public class TranskriptiotTest {



  // Generated by ComTest BEGIN
  /** testIterator73 */
  @Test
  public void testIterator73() {    // Transkriptiot: 73
    Transkriptiot trans = new Transkriptiot(); 
    Transkriptio t1 = new Transkriptio(); t1.rekisteroi(); trans.lisaa(t1); 
    Transkriptio t2 = new Transkriptio(); t2.rekisteroi(); trans.lisaa(t2); 
    Transkriptio t3 = new Transkriptio(); t3.rekisteroi(); trans.lisaa(t3); 
    Transkriptio t4 = new Transkriptio(); t4.rekisteroi(); trans.lisaa(t4); 
    Iterator<Transkriptio> transi = trans.iterator(); 
    assertEquals("From: Transkriptiot line: 83", t1, transi.next()); 
    assertEquals("From: Transkriptiot line: 84", t2, transi.next()); 
    assertEquals("From: Transkriptiot line: 85", t3, transi.next()); 
    assertEquals("From: Transkriptiot line: 86", t4, transi.next()); 
    int[] taulukko = { 1, 2, 3, 4} ; 
    int i = 0; 
    for ( Transkriptio t : trans){
    assertEquals("From: Transkriptiot line: 92", taulukko[i], t.getIdNumero()); 
    i++; 
    }
    assertEquals("From: Transkriptiot line: 96", t1, trans.anna(1)); 
    assertEquals("From: Transkriptiot line: 97", null, trans.anna(5)); 
    List<Transkriptio> kaikki = trans.getAlkiot(); 
    assertEquals("From: Transkriptiot line: 100", 4, kaikki.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHaeTranskriptiot125 
   * @throws SailoException when error
   */
  @Test
  public void testHaeTranskriptiot125() throws SailoException {    // Transkriptiot: 125
    Transkriptiot transtesti = new Transkriptiot(); 
    Transkriptio t1 = new Transkriptio(); 
    Transkriptio t2 = new Transkriptio(); 
    t1.vastaaBad(); 
    t2.vastaaBad(); 
    String hakemisto = "pvktranstesti"; 
    String tnimi = hakemisto+"/transkriptiot"; 
    File dir = new File(hakemisto); 
    File tiedosto = new File(tnimi+".dat"); 
    dir.mkdir(); 
    tiedosto.delete(); 
    try {
    transtesti.haeTranskriptiot(tnimi); 
    fail("Transkriptiot: 139 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    transtesti.lisaa(t1); 
    transtesti.lisaa(t2); 
    transtesti.tallenna(); 
    transtesti = new Transkriptiot(); 
    transtesti.haeTranskriptiot(tnimi); 
    Iterator<Transkriptio> i1 = transtesti.iterator(); 
    assertEquals("From: Transkriptiot line: 147", true, i1.next().toString().equals(t1.toString())); 
    assertEquals("From: Transkriptiot line: 148", true, i1.next().toString().equals(t2.toString())); 
    assertEquals("From: Transkriptiot line: 150", true, tiedosto.delete()); 
    assertEquals("From: Transkriptiot line: 151", true, dir.delete()); 
  } // Generated by ComTest END
}