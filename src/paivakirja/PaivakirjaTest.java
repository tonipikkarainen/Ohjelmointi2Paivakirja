package paivakirja;
// Generated by ComTest BEGIN
import java.util.*;
import kanta.Int;
import static org.junit.Assert.*;
import org.junit.*;
import paivakirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2016.04.14 13:26:47 // Generated by ComTest
 *
 */
@SuppressWarnings("unused")
public class PaivakirjaTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa29 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa29() throws SailoException {    // Paivakirja: 29
    Paivakirja paivakirja = new Paivakirja(); 
    Harjoitus harj1 = new Harjoitus(); harj1.rekisteroi(); 
    Harjoitus harj2 = new Harjoitus(); harj2.rekisteroi(); 
    Harjoitus harj3 = new Harjoitus(); harj3.rekisteroi(); 
    paivakirja.lisaa(harj1); 
    assertEquals("From: Paivakirja line: 38", 1, paivakirja.getHarjoituksia()); 
    paivakirja.lisaa(harj2); 
    paivakirja.lisaa(harj2); 
    paivakirja.lisaa(harj2); 
    assertEquals("From: Paivakirja line: 42", 4, paivakirja.getHarjoituksia()); 
    assertEquals("From: Paivakirja line: 43", harj1, paivakirja.annaHarjoitus(0)); 
    try {
    assertEquals("From: Paivakirja line: 44", harj1, paivakirja.annaHarjoitus(6)); 
    fail("Paivakirja: 44 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    paivakirja.lisaa(harj1); 
    paivakirja.lisaa(harj1); 
    paivakirja.lisaa(harj1); 
    paivakirja.lisaa(harj3); 
    assertEquals("From: Paivakirja line: 49", 8, paivakirja.getHarjoituksia()); 
    paivakirja.lisaa(harj1); 
    Transliitos liitos1 = new Transliitos(); 
    liitos1.setHarjoitusId(2); liitos1.setTransId(3); 
    Transliitos liitos2 = new Transliitos(); 
    liitos2.setHarjoitusId(1); liitos2.setTransId(2); 
    Transliitos liitos3 = new Transliitos(); 
    liitos3.setHarjoitusId(1); liitos3.setTransId(3); 
    assertEquals("From: Paivakirja line: 58", 0, paivakirja.getTransliitoksia()); 
    paivakirja.lisaa(liitos1); 
    paivakirja.lisaa(liitos2); 
    paivakirja.lisaa(liitos3); 
    assertEquals("From: Paivakirja line: 64", 3, paivakirja.getTransliitoksia()); 
    try {
    assertEquals("From: Paivakirja line: 66", liitos3, paivakirja.annaTransliitokset(3)); 
    fail("Paivakirja: 66 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    assertEquals("From: Paivakirja line: 67", liitos3, paivakirja.annaTransliitokset(2)); 
    ArrayList<Int> liittyvat = paivakirja.liittyvatLiitokset(harj1); 
    assertEquals("From: Paivakirja line: 70", 2, liittyvat.size()); 
    assertEquals("From: Paivakirja line: 71", 2, liittyvat.get(0).getArvo()); 
    assertEquals("From: Paivakirja line: 72", 3, liittyvat.get(1).getArvo()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTranskriptiot151 */
  @Test
  public void testAnnaTranskriptiot151() {    // Paivakirja: 151
    Paivakirja p = new Paivakirja(); 
    Transkriptio t1 = new Transkriptio(); t1.rekisteroi(); p.lisaa(t1); 
    Transkriptio t2 = new Transkriptio(); t2.rekisteroi(); p.lisaa(t2); 
    Transkriptio t3 = new Transkriptio(); t3.rekisteroi(); p.lisaa(t3); 
    assertEquals("From: Paivakirja line: 158", 3, p.getTranskriptiota()); 
    p.lisaa(t3); 
    assertEquals("From: Paivakirja line: 160", 4, p.getTranskriptiota()); 
    assertEquals("From: Paivakirja line: 162", t1, p.annaTranskriptiot(1)); 
    assertEquals("From: Paivakirja line: 163", null, p.annaTranskriptiot(4)); 
    List<Transkriptio> kaikki = p.getAlkiot(); 
    assertEquals("From: Paivakirja line: 166", 4, kaikki.size()); 
  } // Generated by ComTest END
}